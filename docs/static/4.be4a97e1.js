(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{168:function(s,a){s.exports='<h1>XFormItem</h1> <p>通常情况下，<code>XFormDesigner</code>、<code>XFormBuilder</code>和<code>XFormViewer</code>会默认使用该组件包裹每一个字段所对应的表单组件，<strong>用于提供统一的布局和表单验证</strong>。当你需要提供某些特殊的表单字段时，你需要使用该组件将字段包装，以便提供统一的验证。例如，需要在<code>XFormBuilder</code>中插入一些固定的表单字段：</p> <pre class=hljs language=html><code class=hljs-code><span class=hljs-tag>&lt;<span class=hljs-name>xform-builder</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>template</span> #<span class=hljs-attr>header</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>xform-item</span> <span class=hljs-attr>:field</span>=<span class=hljs-string>&quot;fieldA&quot;</span> <span class=hljs-attr>validation</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>input</span> <span class=hljs-attr>type</span>=<span class=hljs-string>&quot;text&quot;</span> <span class=hljs-attr>placeholder</span>=<span class=hljs-string>&quot;这里放入你的表单字段&quot;</span>/&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>xform-item</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>xform-item</span> <span class=hljs-attr>:field</span>=<span class=hljs-string>&quot;fieldB&quot;</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>input</span> <span class=hljs-attr>type</span>=<span class=hljs-string>&quot;text&quot;</span> <span class=hljs-attr>placeholder</span>=<span class=hljs-string>&quot;这里放入你的表单字段&quot;</span>/&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>xform-item</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>xform-builder</span>&gt;</span>\n</code></pre> <h2 id=Props class="head-anchor article-sticky-heading"><a class=article-anchor href=#Props>¶</a> Props</h2> <h3>field</h3> <ul class=doc-ul> <li><strong>类型</strong>：<code>XField</code><is-link path=/doc/model#XField></is-link></li> <li><strong>说明</strong>：字段配置。</li> </ul> <h3>validation</h3> <ul class=doc-ul> <li><strong>类型</strong>：<code>boolean | () =&gt; Promise</code></li> <li><strong>说明</strong>：字段配置。</li> </ul> '}}]);