(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{167:function(s,a){s.exports='<h1>XFormViewer 表单查看器</h1> <p>该组件主要用于根据<code>XFormDesigner</code>生成的表单配置展示<code>XFormBuilder</code>生成的表单数据，当然你也可以自行编写组件展示表单数据。</p> <h2 id=基本用法 class="head-anchor article-sticky-heading"><a class=article-anchor href=#基本用法>¶</a> 基本用法</h2> <pre class=hljs language=html><code class=hljs-code><span class=hljs-tag>&lt;<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>xform-viewer</span> <span class=hljs-attr>:model</span>=<span class=hljs-string>&quot;model&quot;</span> <span class=hljs-attr>:schema</span>=<span class=hljs-string>&quot;schema&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;example-viewer&quot;</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>template</span> #<span class=hljs-attr>name_demo</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>name值为demo的字段会这么显示<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>template</span> #<span class=hljs-attr>type_text</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>所有type为text的字段会这么显示<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>xform-viewer</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n<span class=hljs-keyword>import</span> { reactive } <span class=hljs-keyword>from</span> <span class=hljs-string>&#x27;vue&#x27;</span>;\n<span class=hljs-keyword>import</span> { createSchema } <span class=hljs-keyword>from</span> <span class=hljs-string>&#x27;@dongls/xform&#x27;</span>;\n\n<span class=hljs-keyword>export</span> <span class=hljs-keyword>default</span> {\n  setup(){\n    <span class=hljs-keyword>return</span> {\n      <span class=hljs-attr>model</span>: reactive({<span class=hljs-comment>/* 表单数据 */</span>}),\n      <span class=hljs-attr>schema</span>: createSchema({<span class=hljs-comment>/* 表单配置 */</span>})\n    }\n  }\n}\n</span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n</code></pre> <h2 id=Props class="head-anchor article-sticky-heading"><a class=article-anchor href=#Props>¶</a> Props</h2> <h3>schema</h3> <ul class=doc-ul> <li><strong>类型</strong>：<code>XFormSchema</code><is-link path=/doc/model#XFormSchema></is-link></li> <li><strong>说明</strong>：表单的配置，数据来自表单设计器，<strong>必须提供</strong>。</li> </ul> <h3>model</h3> <ul class=doc-ul> <li><strong>类型</strong>：<code>object</code></li> <li><strong>说明</strong>：表单的数据，数据来自表单生成器，<strong>必须提供</strong>。</li> </ul> <h2 id=Slots class="head-anchor article-sticky-heading"><a class=article-anchor href=#Slots>¶</a> Slots</h2> <h3>name_[[name]]</h3> <p>根据<code>name</code>的值定制某一个字段该如何显示，例如：</p> <pre class=hljs language=html><code class=hljs-code><span class=hljs-tag>&lt;<span class=hljs-name>xform-viewer</span> <span class=hljs-attr>:model</span>=<span class=hljs-string>&quot;model&quot;</span> <span class=hljs-attr>:schema</span>=<span class=hljs-string>&quot;schema&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;example-viewer&quot;</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>template</span> #<span class=hljs-attr>name_demo</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>name值为demo的字段会这么显示<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>xform-viewer</span>&gt;</span>\n</code></pre> <h3>type_[[type]]</h3> <p>根据<code>type</code>的值定制某一类型的字段该如何显示，例如：</p> <pre class=hljs language=html><code class=hljs-code><span class=hljs-tag>&lt;<span class=hljs-name>xform-viewer</span> <span class=hljs-attr>:model</span>=<span class=hljs-string>&quot;model&quot;</span> <span class=hljs-attr>:schema</span>=<span class=hljs-string>&quot;schema&quot;</span> <span class=hljs-attr>class</span>=<span class=hljs-string>&quot;example-viewer&quot;</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>template</span> #<span class=hljs-attr>type_text</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>p</span>&gt;</span>所有type为text的字段会这么显示<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>template</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>xform-viewer</span>&gt;</span>\n</code></pre> '}}]);